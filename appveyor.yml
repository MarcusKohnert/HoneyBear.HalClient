version: 1.1.{build}
image: Visual Studio 2017
skip_tags: true
configuration: Release
platform: Any CPU
services: iis
install:
- ps: >-
    iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))

    choco install dotnetcore-windowshosting -y

    iisreset
before_build:
- msbuild -t:restore .\Src\HoneyBear.HalClient.sln
build:
  project: .\Src\HoneyBear.HalClient.sln
after_build:
- ps: >-
    $csproj = Get-Content .\Src\HoneyBear.HalClient\HoneyBear.HalClient.csproj -raw | `
        % {$_ -replace "<AssemblyVersion>1.0.0.0</AssemblyVersion>", "<AssemblyVersion>$env:APPVEYOR_BUILD_VERSION</AssemblyVersion>"} | `
        % {$_ -replace "<FileVersion>1.0.0.0</FileVersion>", "<FileVersion>$env:APPVEYOR_BUILD_VERSION</FileVersion>"} | `
        % {$_ -replace "<Version>1.0.0.0</Version>", "<Version>$env:APPVEYOR_BUILD_VERSION</Version>"}

    $csproj | Set-Content .\Src\HoneyBear.HalClient\HoneyBear.HalClient.csproj

    if ($env:APPVEYOR_REPO_BRANCH -ne "master") {
       Update-AppveyorBuild -Version "${env:APPVEYOR_BUILD_VERSION}-alpha"
    }

    msbuild -t:pack .\Src\HoneyBear.HalClient\HoneyBear.HalClient.csproj `
        -p:configuration=$env:CONFIGURATION `
        -p:packageversion=$env:APPVEYOR_BUILD_VERSION `
        -p:authors="Eoin O'Connor" `
        -p:licenseurl=https://github.com/eoin55/HoneyBear.HalClient/blob/master/LICENSE `
        -p:projecturl=https://github.com/eoin55/HoneyBear.HalClient `
        -p:description="A lightweight fluent .NET client for navigating and consuming HAL APIs.  Includes support for .NET Core." `
        -p:copyright="Copyright Eoin O'Connor 2017" `
        -p:packagetags="HAL JSON Hypermedia HATEOAS REST DotNetCore" `
        -p:packageoutputpath=$pwd\artifacts
before_test:
- ps: >-
    Import-Module WebAdministration

    $projectName = "HoneyBear.HalClient.SampleApi.Host"

    $publishDir = "$pwd\publish\$projectName"

    msbuild -t:publish ".\Src\$projectName\$projectName.csproj" -p:configuration=Release -p:publishdir=$publishDir

    if (!(Test-Path IIS:\AppPools\$projectName)) {
        New-WebAppPool $projectName

        Set-ItemProperty IIS:\AppPools\$projectName -Name managedRuntimeVersion -Value ""
    }

    if (!(Test-Path IIS:\Sites\$projectName)) {
        New-Website -Name $projectName -ApplicationPool $projectName -Port 5000 -IPAddress * -PhysicalPath $publishDir
    }
after_test:
- ps: >-
    . $env:USERPROFILE\.nuget\packages\OpenCover\4.6.519\tools\OpenCover.Console.exe `
        -register:user `
        -filter:"+[HoneyBear.HalClient]*" `
        -target:"$env:USERPROFILE\.nuget\packages\NUnit.ConsoleRunner\3.6.1\tools\nunit3-console.exe" `
        -targetargs:".\Src\HoneyBear.HalClient.Unit.Tests\bin\$env:CONFIGURATION\net452\HoneyBear.HalClient.Unit.Tests.dll" `
        -output:coverage.xml

    . $env:USERPROFILE\.nuget\packages\coveralls.io\1.3.4\tools\coveralls.net.exe `
        --opencover coverage.xml `
        --repo-token hOBugtrP7A2crVX8BA0cT9E8GjnlK8bcP
deploy: off
artifacts:
- path: .\artifacts\*.nupkg
